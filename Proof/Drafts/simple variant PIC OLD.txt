
VRAAG 1 - Specificatie

simple variant: 
{* i=N ⋀ (found = (∃k : 0≤k<N : a[k]=x)) ⋀ sorted a N *}


VRAAG 2 - Proof simple variant

Bewijzen:
INIT:   ⊨ P ⟹ I
PIC:    {* I ⋀ g *} S {* I *}
PEC:    ⊨ I ⋀ ¬g ⟹ Q

Invariant (I):
{* 0≤i≤N ⋀ (found = (∃k: 0≤k<i : a[k]=x)) ⋀ sorted a N *}


PROOF simple variant PIC
A1: i < N
D1: S = found := found ⋁ a[i]=x; i:=i+1
D2: I = 0≤i≤N ⋀ (found = (∃k: 0≤k<i : a[k]=x))
G : wp S I  // note: check if this is the weakest-precondition
BEGIN ------------------------------------------

1. { calculate wp }
    wp S I = 0≤i+1≤N ⋀ ((found ⋁ a[i]=x) = (∃k: 0≤k<i+1 : a[k]=x))
  
    PROOF calculate wp
    BEGIN --------------------------------------
        wp (found := found ⋁ a[i]=x; i:=i+1) (0≤i≤N ⋀ (found = (∃k: 0≤k<i : a[k]=x)))
    1. { wp of statements sequence }
        wp (found := found ⋁ a[i]=x) (wp (i:=i+1) (0≤i≤N ⋀ (found = (∃k: 0≤k<i : a[k]=x)))
    2. { wp of assignment }
        wp (found := found ⋁ a[i]=x) (0≤i+1≤N ⋀ (found = (∃k: 0≤k<i+1 : a[k]=x)))
    3. { wp of assignment }
        0≤i+1≤N ⋀ ((found ⋁ a[i]=x) = (∃k: 0≤k<i+1 : a[k]=x))
    END ----------------------------------------

2. { see equality subproof }
    (found ⋁ (a[i]=x)) = (∃k: 0≤k<i+1 : a[k]=x)
    
    PROOF equality
    [SOME i]
    A1: found ⋁ (a[i]=x)
    A2: found = (∃k: 0≤k<i : a[k]=x)  // note: from invariant I
    G : (found ⋁ (a[i]=x)) = (∃k: 0≤k<i+1 : a[k]=x)
    BEGIN --------------------------------------
        found ⋁ (a[i]=x)
    1. { substitute with A2 }
        (∃k: 0≤k<i : a[k]=x) ⋁ (a[i]=x)
    2. { introduce ∃-kwantor }
        (∃k: 0≤k<i : a[k]=x) ⋁ (∃k: k=i : a[k]=x)
    3. { combine domains }
        (∃k: 0≤k<i+1 : a[k]=x)
    END ----------------------------------------

3. { rewrite A1 }
    i+1 ≤ N 

4. { combine 2 and 3 }
    (found ⋁ (a[i]=x)) = (∃k: 0≤k<i+1 : a[k]=x) ⋀ i+1≤N 

5. { combine 1 and 4 makes wp True }
    wp S I

END --------------------------------------------


