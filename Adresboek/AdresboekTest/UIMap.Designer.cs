// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace AdresboekTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public partial class UIMap
    {
        
        /// <summary>
        /// ViewAdressbook1
        /// </summary>
        public void ViewAdressbook1()
        {
            #region Variable Declarations
            WinButton uIViewButton = this.UIAdressbookmanagerWindow.UIViewWindow.UIViewButton;
            #endregion

            // Click 'View' button
            Mouse.Click(uIViewButton, new Point(18, 5));
        }
        
        /// <summary>
        /// AddEmpty
        /// </summary>
        public void AddEmpty()
        {
            #region Variable Declarations
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(42, 10));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(40, 16));
        }
        
        /// <summary>
        /// AddOnlyName - Use 'AddOnlyNameParams' to pass parameters into this method.
        /// </summary>
        public void AddOnlyName()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Type 'Bas' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddOnlyNameParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(23, 13));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(33, 15));
        }
        
        /// <summary>
        /// AddValid - Use 'AddValidParams' to pass parameters into this method.
        /// </summary>
        public void AddValid()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type 'Bas@bas.nl' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddValidParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(38, 11));
        }
        
        /// <summary>
        /// AddOnlyEmail - Use 'AddOnlyEmailParams' to pass parameters into this method.
        /// </summary>
        public void AddOnlyEmail()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type 'bladiebladiebla@hotmail.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddOnlyEmailParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(28, 11));
        }
        
        /// <summary>
        /// AddNonValidEmail - Use 'AddNonValidEmailParams' to pass parameters into this method.
        /// </summary>
        public void AddNonValidEmail()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Type 'bas' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddNonValidEmailParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(18, 16));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(58, 16));

            // Type 'bas@@' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddNonValidEmailParams.UIItemEditText1;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(21, 13));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(74, 9));

            // Type 'bas@@blabla' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddNonValidEmailParams.UIItemEditText2;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(21, 9));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(75, 16));

            // Type 'bas@bla./nl' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddNonValidEmailParams.UIItemEditText3;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(19, 14));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(47, 8));

            // Type 'bas@bla...nl' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddNonValidEmailParams.UIItemEditText4;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(42, 12));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(15, 17));

            // Type 'b..as@bla...nl' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddNonValidEmailParams.UIItemEditText5;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(33, 10));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(36, 10));

            // Type 'b..as@bla.nl' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddNonValidEmailParams.UIItemEditText6;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(55, 6));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(40, 13));
        }
        
        /// <summary>
        /// AddValidEmail - Use 'AddValidEmailParams' to pass parameters into this method.
        /// </summary>
        public void AddValidEmail()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type 'bas@hotmail.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddValidEmailParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(33, 10));

            // Type 'bas_meesters@hotmail.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddValidEmailParams.UIItemEditText1;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(18, 10));

            // Type 'bas.meesters@hotmail.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddValidEmailParams.UIItemEditText2;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(19, 8));

            // Type 'bas.meest"iets"ers@hotmail.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddValidEmailParams.UIItemEditText3;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(43, 12));

            // Type 'bas"nogiets@.nl"iets@hotmail.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddValidEmailParams.UIItemEditText4;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(9, 11));
        }
        
        /// <summary>
        /// AddContact - Use 'AddContactParams' to pass parameters into this method.
        /// </summary>
        public void AddContact()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type 'Bas' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddContactParams.UIItemEditText;

            // Type '{Tab}' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit, this.AddContactParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type 'bas@bas.nl' in 'Unknown Name' text box
            uIItemEdit1.Text = this.AddContactParams.UIItemEditText1;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(41, 11));
        }
        
        /// <summary>
        /// DeleteContact
        /// </summary>
        public void DeleteContact()
        {
            #region Variable Declarations
            WinButton uIDeleteContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIDeleteContactButton;
            #endregion

            // Click 'Delete Contact' button
            Mouse.Click(uIDeleteContactButton, new Point(48, 6));
        }
        
        /// <summary>
        /// AddMultipleContacts - Use 'AddMultipleContactsParams' to pass parameters into this method.
        /// </summary>
        public void AddMultipleContacts()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type 'Bas' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddMultipleContactsParams.UIItemEditText;

            // Type '{Tab}' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit, this.AddMultipleContactsParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type 'bas@bas.nl' in 'Unknown Name' text box
            uIItemEdit1.Text = this.AddMultipleContactsParams.UIItemEditText1;

            // Double-Click 'Add Contact' button
            Mouse.DoubleClick(uIAddContactButton, new Point(51, 11));

            // Double-Click 'Add Contact' button
            Mouse.DoubleClick(uIAddContactButton, new Point(51, 11));

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(51, 11));
        }
        
        /// <summary>
        /// SearchClear - Use 'SearchClearParams' to pass parameters into this method.
        /// </summary>
        public void SearchClear()
        {
            #region Variable Declarations
            WinEdit uIAdressbookNamesampleEdit = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAdressbookNamesampleEdit;
            WinButton uISearchButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UISearchButton;
            WinButton uIClearButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIClearButton;
            #endregion

            // Type 'bas' in 'Adressbook Name: sample' text box
            uIAdressbookNamesampleEdit.Text = this.SearchClearParams.UIAdressbookNamesampleEditText;

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(45, 13));

            // Click 'clear' button
            Mouse.Click(uIClearButton, new Point(22, 8));
        }
        
        /// <summary>
        /// SearchCopyClear - Use 'SearchCopyClearParams' to pass parameters into this method.
        /// </summary>
        public void SearchCopyClear()
        {
            #region Variable Declarations
            WinEdit uIAdressbookNamesearchEdit = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAdressbookNamesearchEdit;
            WinButton uISearchButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UISearchButton;
            WinComboBox uIContactsComboBox = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIContactsComboBox;
            WinButton uICopyalltoButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UICopyalltoButton;
            WinButton uIClearButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIClearButton;
            #endregion

            // Type 'bas' in 'Adressbook Name: searchbook' text box
            uIAdressbookNamesearchEdit.Text = this.SearchCopyClearParams.UIAdressbookNamesearchEditText;

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(36, 4));

            // Select 'sample2' in 'Contacts:' combo box
            uIContactsComboBox.SelectedItem = this.SearchCopyClearParams.UIContactsComboBoxSelectedItem;

            // Click 'Copy all to:' button
            Mouse.Click(uICopyalltoButton, new Point(55, 18));

            // Click 'clear' button
            Mouse.Click(uIClearButton, new Point(24, 14));
        }
        
        /// <summary>
        /// SearchDeleteClear - Use 'SearchDeleteClearParams' to pass parameters into this method.
        /// </summary>
        public void SearchDeleteClear()
        {
            #region Variable Declarations
            WinEdit uIAdressbookNamesampleEdit = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAdressbookNamesampleEdit;
            WinButton uISearchButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UISearchButton;
            WinButton uIRemoveallButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIRemoveallButton;
            WinButton uIClearButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIClearButton;
            #endregion

            // Type 'bas' in 'Adressbook Name: sample' text box
            uIAdressbookNamesampleEdit.Text = this.SearchDeleteClearParams.UIAdressbookNamesampleEditText;

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(43, 8));

            // Click 'Remove all' button
            Mouse.Click(uIRemoveallButton, new Point(36, 7));

            // Click 'clear' button
            Mouse.Click(uIClearButton, new Point(14, 11));
        }
        
        /// <summary>
        /// CreateEmpty
        /// </summary>
        public void CreateEmpty()
        {
            #region Variable Declarations
            WinButton uICreateAdressbookButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UICreateAdressbookButton;
            #endregion

            // Click 'Create Adressbook' button
            Mouse.Click(uICreateAdressbookButton, new Point(47, 15));
        }
        
        /// <summary>
        /// GotoAddAdressbook
        /// </summary>
        public void GotoAddAdressbook()
        {
            #region Variable Declarations
            WinMenuItem uIAddAdressbookMenuItem = this.UIAdressbookmanagerWindow.UIItemMenuBar.UIAdressbooksMenuItem.UIAddAdressbookMenuItem;
            #endregion

            // Click 'Adressbooks' -> 'Add Adressbook' menu item
            Mouse.Click(uIAddAdressbookMenuItem, new Point(53, 16));
        }
        
        /// <summary>
        /// CreateNonValidAdressbook - Use 'CreateNonValidAdressbookParams' to pass parameters into this method.
        /// </summary>
        public void CreateNonValidAdressbook()
        {
            #region Variable Declarations
            WinEdit uIAdressbookNameEdit = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAdressbookNameEdit;
            WinButton uICreateAdressbookButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UICreateAdressbookButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Type 'eenveeeltelangeenaaaaaaaaaaaaaaaaam' in 'Adressbook Name:' text box
            uIAdressbookNameEdit.Text = this.CreateNonValidAdressbookParams.UIAdressbookNameEditText;

            // Click 'Create Adressbook' button
            Mouse.Click(uICreateAdressbookButton, new Point(46, 15));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(60, 5));
        }
        
        /// <summary>
        /// CreateValidAdressbook - Use 'CreateValidAdressbookParams' to pass parameters into this method.
        /// </summary>
        public void CreateValidAdressbook()
        {
            #region Variable Declarations
            WinEdit uIAdressbookNameEdit = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAdressbookNameEdit;
            WinButton uICreateAdressbookButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UICreateAdressbookButton;
            #endregion

            // Type 'Test' in 'Adressbook Name:' text box
            uIAdressbookNameEdit.Text = this.CreateValidAdressbookParams.UIAdressbookNameEditText;

            // Click 'Create Adressbook' button
            Mouse.Click(uICreateAdressbookButton, new Point(45, 11));
        }
        
        /// <summary>
        /// GotoViewAdressbooks
        /// </summary>
        public void GotoViewAdressbooks()
        {
            #region Variable Declarations
            WinMenuItem uIViewAdressbooksMenuItem = this.UIAdressbookmanagerWindow.UIItemMenuBar.UIAdressbooksMenuItem.UIViewAdressbooksMenuItem;
            #endregion

            // Click 'Adressbooks' -> 'View Adressbooks' menu item
            Mouse.Click(uIViewAdressbooksMenuItem, new Point(63, 5));
        }
        
        /// <summary>
        /// AddNonValidName - Use 'AddNonValidNameParams' to pass parameters into this method.
        /// </summary>
        public void AddNonValidName()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Type '123' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddNonValidNameParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(22, 13));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(61, 14));
        }
        
        /// <summary>
        /// AddEmptyClick
        /// </summary>
        public void AddEmptyClick()
        {
            #region Variable Declarations
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(36, 14));

            // Click 'Unknown Name' text box
            Mouse.Click(uIItemEdit, new Point(41, 12));

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(43, 8));
        }
        
        /// <summary>
        /// DoubleDotsName - Use 'DoubleDotsNameParams' to pass parameters into this method.
        /// </summary>
        public void DoubleDotsName()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Type '..' in 'Unknown Name' text box
            uIItemEdit.Text = this.DoubleDotsNameParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(42, 13));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(63, 13));
        }
        
        /// <summary>
        /// SingleDotName - Use 'SingleDotNameParams' to pass parameters into this method.
        /// </summary>
        public void SingleDotName()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type '.' in 'Unknown Name' text box
            uIItemEdit.Text = this.SingleDotNameParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(15, 13));
        }
        
        /// <summary>
        /// AddEmptyDomain - Use 'AddEmptyDomainParams' to pass parameters into this method.
        /// </summary>
        public void AddEmptyDomain()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type '@empty' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddEmptyDomainParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(33, 11));
        }
        
        /// <summary>
        /// AddEmptyQuotes - Use 'AddEmptyQuotesParams' to pass parameters into this method.
        /// </summary>
        public void AddEmptyQuotes()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type 'bas""empty@bas.nl' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddEmptyQuotesParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(41, 13));
        }
        
        /// <summary>
        /// DoubleDotsInDomain - Use 'DoubleDotsInDomainParams' to pass parameters into this method.
        /// </summary>
        public void DoubleDotsInDomain()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type 'localpart@domain.com.com2' in 'Unknown Name' text box
            uIItemEdit.Text = this.DoubleDotsInDomainParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(48, 18));
        }
        
        /// <summary>
        /// SpecialChactersInDomain - Use 'SpecialChactersInDomainParams' to pass parameters into this method.
        /// </summary>
        public void SpecialChactersInDomain()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Type 'loc\"..@[]<>=--0;\"@domain.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.SpecialChactersInDomainParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(43, 14));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(72, 12));

            // Type 'localpart@dom--ain-.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.SpecialChactersInDomainParams.UIItemEditText1;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(33, 15));
        }
        
        /// <summary>
        /// DoubleContact - Use 'DoubleContactParams' to pass parameters into this method.
        /// </summary>
        public void DoubleContact()
        {
            #region Variable Declarations
            WinWindow uIItemWindow = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIItemWindow;
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Click window numbered 2 in 'Adressbook manager' client
            Mouse.Click(uIItemWindow, new Point(49, 0));

            // Type 'bas' in 'Unknown Name' text box
            uIItemEdit.Text = this.DoubleContactParams.UIItemEditText;

            // Type '{Tab}' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit, this.DoubleContactParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type 'bas@bladiebla.com' in 'Unknown Name' text box
            uIItemEdit1.Text = this.DoubleContactParams.UIItemEditText1;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(14, 11));

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(14, 11));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(59, 13));
        }
        
        /// <summary>
        /// CreateMultipleContacts - Use 'CreateMultipleContactsParams' to pass parameters into this method.
        /// </summary>
        public void CreateMultipleContacts()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type 'bas' in 'Unknown Name' text box
            uIItemEdit.Text = this.CreateMultipleContactsParams.UIItemEditText;

            // Type '{Tab}' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit, this.CreateMultipleContactsParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type 'bas@hotmail.com' in 'Unknown Name' text box
            uIItemEdit1.Text = this.CreateMultipleContactsParams.UIItemEditText1;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(26, 9));

            // Type 'bas2@hotmail.com' in 'Unknown Name' text box
            uIItemEdit1.Text = this.CreateMultipleContactsParams.UIItemEditText2;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(15, 8));

            // Type 'bas3@hotmail.com' in 'Unknown Name' text box
            uIItemEdit1.Text = this.CreateMultipleContactsParams.UIItemEditText3;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(34, 12));

            // Type 'bas4@hotmail.com' in 'Unknown Name' text box
            uIItemEdit1.Text = this.CreateMultipleContactsParams.UIItemEditText4;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(51, 6));
        }
        
        /// <summary>
        /// SearchEmpty
        /// </summary>
        public void SearchEmpty()
        {
            #region Variable Declarations
            WinButton uISearchButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UISearchButton;
            #endregion

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(42, 8));
        }
        
        /// <summary>
        /// Resize
        /// </summary>
        public void Resize()
        {
            #region Variable Declarations
            WinButton uIViewButton = this.UIAdressbookmanagerWindow.UIViewWindow.UIViewButton;
            #endregion

            // Click 'View' button
            Mouse.Click(uIViewButton, new Point(29, 8));
        }
        
        /// <summary>
        /// EmptyQuotes - Use 'EmptyQuotesParams' to pass parameters into this method.
        /// </summary>
        public void EmptyQuotes()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type 'bas""@bas.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.EmptyQuotesParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(30, 11));
        }
        
        /// <summary>
        /// SearchCopyEmpty - Use 'SearchCopyEmptyParams' to pass parameters into this method.
        /// </summary>
        public void SearchCopyEmpty()
        {
            #region Variable Declarations
            WinButton uISearchButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UISearchButton;
            WinComboBox uIContactsComboBox = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIContactsComboBox;
            WinButton uICopyalltoButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UICopyalltoButton;
            #endregion

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(37, 10));

            // Select 'sample3' in 'Contacts:' combo box
            uIContactsComboBox.SelectedItem = this.SearchCopyEmptyParams.UIContactsComboBoxSelectedItem;

            // Click 'Copy all to:' button
            Mouse.Click(uICopyalltoButton, new Point(45, 6));
        }
        
        /// <summary>
        /// SearchRemoveEmpty
        /// </summary>
        public void SearchRemoveEmpty()
        {
            #region Variable Declarations
            WinButton uISearchButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UISearchButton;
            WinButton uIRemoveallButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIRemoveallButton;
            #endregion

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(31, 15));

            // Click 'Remove all' button
            Mouse.Click(uIRemoveallButton, new Point(44, 11));
        }
        
        /// <summary>
        /// RemoveAll
        /// </summary>
        public void RemoveAll()
        {
            #region Variable Declarations
            WinButton uIRemoveallButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIRemoveallButton;
            #endregion

            // Click 'Remove all' button
            Mouse.Click(uIRemoveallButton, new Point(34, 16));
        }
        
        /// <summary>
        /// QuotesFirst - Use 'QuotesFirstParams' to pass parameters into this method.
        /// </summary>
        public void QuotesFirst()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type '"bladiebla"a@hotmail.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.QuotesFirstParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(46, 7));

            // Type '"bladiebla"a@hotmail.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.QuotesFirstParams.UIItemEditText1;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(62, 13));
        }
        
        /// <summary>
        /// DotFirst - Use 'DotFirstParams' to pass parameters into this method.
        /// </summary>
        public void DotFirst()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Type '.iets@hotmail.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.DotFirstParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(57, 10));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(59, 11));
        }
        
        /// <summary>
        /// DotLast - Use 'DotLastParams' to pass parameters into this method.
        /// </summary>
        public void DotLast()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Type 'add.@hotmail.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.DotLastParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(36, 2));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(75, 13));
        }
        
        /// <summary>
        /// AddContactToMultipleAddressbooks - Use 'AddContactToMultipleAddressbooksParams' to pass parameters into this method.
        /// </summary>
        public void AddContactToMultipleAddressbooks()
        {
            #region Variable Declarations
            WinButton uIViewButton = this.UIAdressbookmanagerWindow.UIViewWindow.UIViewButton;
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinMenuItem uIViewAdressbooksMenuItem = this.UIAdressbookmanagerWindow.UIItemMenuBar.UIAdressbooksMenuItem.UIViewAdressbooksMenuItem;
            WinButton uIViewButton1 = this.UIAdressbookmanagerWindow.UIViewWindow2.UIViewButton;
            #endregion

            // Click 'View' button
            Mouse.Click(uIViewButton, new Point(29, 14));

            // Type 'test' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddContactToMultipleAddressbooksParams.UIItemEditText;

            // Type '{Tab}' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit, this.AddContactToMultipleAddressbooksParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type 'test@gmail.com' in 'Unknown Name' text box
            uIItemEdit1.Text = this.AddContactToMultipleAddressbooksParams.UIItemEditText1;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(59, 10));

            // Click 'Adressbooks' -> 'View Adressbooks' menu item
            Mouse.Click(uIViewAdressbooksMenuItem, new Point(68, 6));

            // Click 'View' button
            Mouse.Click(uIViewButton1, new Point(30, 9));

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(29, 13));
        }
        
        /// <summary>
        /// AddAndDeleteContactMultipleAddressbooks - Use 'AddAndDeleteContactMultipleAddressbooksParams' to pass parameters into this method.
        /// </summary>
        public void AddAndDeleteContactMultipleAddressbooks()
        {
            #region Variable Declarations
            WinButton uIViewButton = this.UIAdressbookmanagerWindow.UIViewWindow.UIViewButton;
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinMenuItem uIViewAdressbooksMenuItem = this.UIAdressbookmanagerWindow.UIItemMenuBar.UIAdressbooksMenuItem.UIViewAdressbooksMenuItem;
            WinButton uIViewButton1 = this.UIAdressbookmanagerWindow.UIViewWindow2.UIViewButton;
            WinButton uIDeleteContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIDeleteContactButton;
            WinButton uICloseButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerTitleBar.UICloseButton;
            #endregion

            // Click 'View' button
            Mouse.Click(uIViewButton, new Point(42, 7));

            // Type 'test' in 'Unknown Name' text box
            uIItemEdit.Text = this.AddAndDeleteContactMultipleAddressbooksParams.UIItemEditText;

            // Type '{Tab}' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit, this.AddAndDeleteContactMultipleAddressbooksParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type 'test@gmail.com' in 'Unknown Name' text box
            uIItemEdit1.Text = this.AddAndDeleteContactMultipleAddressbooksParams.UIItemEditText1;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(16, 15));

            // Click 'Adressbooks' -> 'View Adressbooks' menu item
            Mouse.Click(uIViewAdressbooksMenuItem, new Point(60, 6));

            // Click 'View' button
            Mouse.Click(uIViewButton1, new Point(34, 10));

            // Click 'Unknown Name' text box
            Mouse.Click(uIItemEdit, new Point(58, 9));

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(43, 6));

            // Click 'Delete Contact' button
            Mouse.Click(uIDeleteContactButton, new Point(15, 15));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(14, 13));
        }
        
        /// <summary>
        /// DeleteContactMultipleAddressbooks - Use 'DeleteContactMultipleAddressbooksParams' to pass parameters into this method.
        /// </summary>
        public void DeleteContactMultipleAddressbooks()
        {
            #region Variable Declarations
            WinClient uIAdressbookmanagerClient = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient;
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinMenuItem uIViewAdressbooksMenuItem = this.UIAdressbookmanagerWindow.UIItemMenuBar.UIAdressbooksMenuItem.UIViewAdressbooksMenuItem;
            WinButton uIViewButton = this.UIAdressbookmanagerWindow.UIViewWindow2.UIViewButton;
            WinButton uIDeleteContactButton = this.UIAdressbookmanagerWindow.UIDeleteContactWindow.UIDeleteContactButton;
            #endregion

            // Click 'Adressbook manager' client
            Mouse.Click(uIAdressbookmanagerClient, new Point(76, 54));

            // Type 'test' in 'Unknown Name' text box
            uIItemEdit.Text = this.DeleteContactMultipleAddressbooksParams.UIItemEditText;

            // Type '{Tab}' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit, this.DeleteContactMultipleAddressbooksParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type 'test@gmail.com' in 'Unknown Name' text box
            uIItemEdit1.Text = this.DeleteContactMultipleAddressbooksParams.UIItemEditText1;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(49, 15));

            // Click 'Adressbooks' -> 'View Adressbooks' menu item
            Mouse.Click(uIViewAdressbooksMenuItem, new Point(43, 4));

            // Click 'View' button
            Mouse.Click(uIViewButton, new Point(26, 13));

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(20, 14));

            // Click 'Delete Contact' button
            Mouse.Click(uIDeleteContactButton, new Point(41, 16));
        }
        
        /// <summary>
        /// DeleteContactFromMultipleAddressbooks - Use 'DeleteContactFromMultipleAddressbooksParams' to pass parameters into this method.
        /// </summary>
        public void DeleteContactFromMultipleAddressbooks()
        {
            #region Variable Declarations
            WinButton uIViewButton = this.UIAdressbookmanagerWindow.UIViewWindow.UIViewButton;
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinMenuItem uIViewAdressbooksMenuItem = this.UIAdressbookmanagerWindow.UIItemMenuBar.UIAdressbooksMenuItem.UIViewAdressbooksMenuItem;
            WinButton uIViewButton1 = this.UIAdressbookmanagerWindow.UIViewWindow2.UIViewButton;
            WinButton uIDeleteContactButton = this.UIAdressbookmanagerWindow.UIDeleteContactWindow.UIDeleteContactButton;
            #endregion

            // Click 'View' button
            Mouse.Click(uIViewButton, new Point(27, 11));

            // Type 'test' in 'Unknown Name' text box
            uIItemEdit.Text = this.DeleteContactFromMultipleAddressbooksParams.UIItemEditText;

            // Type '{Tab}' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit, this.DeleteContactFromMultipleAddressbooksParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type 'test@gmail.com' in 'Unknown Name' text box
            uIItemEdit1.Text = this.DeleteContactFromMultipleAddressbooksParams.UIItemEditText1;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(51, 8));

            // Click 'Adressbooks' -> 'View Adressbooks' menu item
            Mouse.Click(uIViewAdressbooksMenuItem, new Point(75, 11));

            // Click 'View' button
            Mouse.Click(uIViewButton1, new Point(17, 16));

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(38, 11));

            // Click 'Delete Contact' button
            Mouse.Click(uIDeleteContactButton, new Point(35, 9));
        }
        
        /// <summary>
        /// SingleQuote - Use 'SingleQuoteParams' to pass parameters into this method.
        /// </summary>
        public void SingleQuote()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Type 'bas"iets@hotmail.com' in 'Unknown Name' text box
            uIItemEdit.Text = this.SingleQuoteParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(32, 13));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(39, 14));
        }
        
        /// <summary>
        /// EmptyDomain - Use 'EmptyDomainParams' to pass parameters into this method.
        /// </summary>
        public void EmptyDomain()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIAdressbookmanagerWindow.UIItemWindow1.UIItemEdit;
            WinButton uIAddContactButton = this.UIAdressbookmanagerWindow.UIAdressbookmanagerClient.UIAddContactButton;
            #endregion

            // Type 'bas@' in 'Unknown Name' text box
            uIItemEdit.Text = this.EmptyDomainParams.UIItemEditText;

            // Click 'Add Contact' button
            Mouse.Click(uIAddContactButton, new Point(36, 15));
        }
        
        #region Properties
        public virtual AddOnlyNameParams AddOnlyNameParams
        {
            get
            {
                if ((this.mAddOnlyNameParams == null))
                {
                    this.mAddOnlyNameParams = new AddOnlyNameParams();
                }
                return this.mAddOnlyNameParams;
            }
        }
        
        public virtual AddValidParams AddValidParams
        {
            get
            {
                if ((this.mAddValidParams == null))
                {
                    this.mAddValidParams = new AddValidParams();
                }
                return this.mAddValidParams;
            }
        }
        
        public virtual AddOnlyEmailParams AddOnlyEmailParams
        {
            get
            {
                if ((this.mAddOnlyEmailParams == null))
                {
                    this.mAddOnlyEmailParams = new AddOnlyEmailParams();
                }
                return this.mAddOnlyEmailParams;
            }
        }
        
        public virtual AddNonValidEmailParams AddNonValidEmailParams
        {
            get
            {
                if ((this.mAddNonValidEmailParams == null))
                {
                    this.mAddNonValidEmailParams = new AddNonValidEmailParams();
                }
                return this.mAddNonValidEmailParams;
            }
        }
        
        public virtual AddValidEmailParams AddValidEmailParams
        {
            get
            {
                if ((this.mAddValidEmailParams == null))
                {
                    this.mAddValidEmailParams = new AddValidEmailParams();
                }
                return this.mAddValidEmailParams;
            }
        }
        
        public virtual AddContactParams AddContactParams
        {
            get
            {
                if ((this.mAddContactParams == null))
                {
                    this.mAddContactParams = new AddContactParams();
                }
                return this.mAddContactParams;
            }
        }
        
        public virtual AddMultipleContactsParams AddMultipleContactsParams
        {
            get
            {
                if ((this.mAddMultipleContactsParams == null))
                {
                    this.mAddMultipleContactsParams = new AddMultipleContactsParams();
                }
                return this.mAddMultipleContactsParams;
            }
        }
        
        public virtual SearchClearParams SearchClearParams
        {
            get
            {
                if ((this.mSearchClearParams == null))
                {
                    this.mSearchClearParams = new SearchClearParams();
                }
                return this.mSearchClearParams;
            }
        }
        
        public virtual SearchCopyClearParams SearchCopyClearParams
        {
            get
            {
                if ((this.mSearchCopyClearParams == null))
                {
                    this.mSearchCopyClearParams = new SearchCopyClearParams();
                }
                return this.mSearchCopyClearParams;
            }
        }
        
        public virtual SearchDeleteClearParams SearchDeleteClearParams
        {
            get
            {
                if ((this.mSearchDeleteClearParams == null))
                {
                    this.mSearchDeleteClearParams = new SearchDeleteClearParams();
                }
                return this.mSearchDeleteClearParams;
            }
        }
        
        public virtual CreateNonValidAdressbookParams CreateNonValidAdressbookParams
        {
            get
            {
                if ((this.mCreateNonValidAdressbookParams == null))
                {
                    this.mCreateNonValidAdressbookParams = new CreateNonValidAdressbookParams();
                }
                return this.mCreateNonValidAdressbookParams;
            }
        }
        
        public virtual CreateValidAdressbookParams CreateValidAdressbookParams
        {
            get
            {
                if ((this.mCreateValidAdressbookParams == null))
                {
                    this.mCreateValidAdressbookParams = new CreateValidAdressbookParams();
                }
                return this.mCreateValidAdressbookParams;
            }
        }
        
        public virtual AddNonValidNameParams AddNonValidNameParams
        {
            get
            {
                if ((this.mAddNonValidNameParams == null))
                {
                    this.mAddNonValidNameParams = new AddNonValidNameParams();
                }
                return this.mAddNonValidNameParams;
            }
        }
        
        public virtual DoubleDotsNameParams DoubleDotsNameParams
        {
            get
            {
                if ((this.mDoubleDotsNameParams == null))
                {
                    this.mDoubleDotsNameParams = new DoubleDotsNameParams();
                }
                return this.mDoubleDotsNameParams;
            }
        }
        
        public virtual SingleDotNameParams SingleDotNameParams
        {
            get
            {
                if ((this.mSingleDotNameParams == null))
                {
                    this.mSingleDotNameParams = new SingleDotNameParams();
                }
                return this.mSingleDotNameParams;
            }
        }
        
        public virtual AddEmptyDomainParams AddEmptyDomainParams
        {
            get
            {
                if ((this.mAddEmptyDomainParams == null))
                {
                    this.mAddEmptyDomainParams = new AddEmptyDomainParams();
                }
                return this.mAddEmptyDomainParams;
            }
        }
        
        public virtual AddEmptyQuotesParams AddEmptyQuotesParams
        {
            get
            {
                if ((this.mAddEmptyQuotesParams == null))
                {
                    this.mAddEmptyQuotesParams = new AddEmptyQuotesParams();
                }
                return this.mAddEmptyQuotesParams;
            }
        }
        
        public virtual DoubleDotsInDomainParams DoubleDotsInDomainParams
        {
            get
            {
                if ((this.mDoubleDotsInDomainParams == null))
                {
                    this.mDoubleDotsInDomainParams = new DoubleDotsInDomainParams();
                }
                return this.mDoubleDotsInDomainParams;
            }
        }
        
        public virtual SpecialChactersInDomainParams SpecialChactersInDomainParams
        {
            get
            {
                if ((this.mSpecialChactersInDomainParams == null))
                {
                    this.mSpecialChactersInDomainParams = new SpecialChactersInDomainParams();
                }
                return this.mSpecialChactersInDomainParams;
            }
        }
        
        public virtual DoubleContactParams DoubleContactParams
        {
            get
            {
                if ((this.mDoubleContactParams == null))
                {
                    this.mDoubleContactParams = new DoubleContactParams();
                }
                return this.mDoubleContactParams;
            }
        }
        
        public virtual CreateMultipleContactsParams CreateMultipleContactsParams
        {
            get
            {
                if ((this.mCreateMultipleContactsParams == null))
                {
                    this.mCreateMultipleContactsParams = new CreateMultipleContactsParams();
                }
                return this.mCreateMultipleContactsParams;
            }
        }
        
        public virtual EmptyQuotesParams EmptyQuotesParams
        {
            get
            {
                if ((this.mEmptyQuotesParams == null))
                {
                    this.mEmptyQuotesParams = new EmptyQuotesParams();
                }
                return this.mEmptyQuotesParams;
            }
        }
        
        public virtual SearchCopyEmptyParams SearchCopyEmptyParams
        {
            get
            {
                if ((this.mSearchCopyEmptyParams == null))
                {
                    this.mSearchCopyEmptyParams = new SearchCopyEmptyParams();
                }
                return this.mSearchCopyEmptyParams;
            }
        }
        
        public virtual QuotesFirstParams QuotesFirstParams
        {
            get
            {
                if ((this.mQuotesFirstParams == null))
                {
                    this.mQuotesFirstParams = new QuotesFirstParams();
                }
                return this.mQuotesFirstParams;
            }
        }
        
        public virtual DotFirstParams DotFirstParams
        {
            get
            {
                if ((this.mDotFirstParams == null))
                {
                    this.mDotFirstParams = new DotFirstParams();
                }
                return this.mDotFirstParams;
            }
        }
        
        public virtual DotLastParams DotLastParams
        {
            get
            {
                if ((this.mDotLastParams == null))
                {
                    this.mDotLastParams = new DotLastParams();
                }
                return this.mDotLastParams;
            }
        }
        
        public virtual AddContactToMultipleAddressbooksParams AddContactToMultipleAddressbooksParams
        {
            get
            {
                if ((this.mAddContactToMultipleAddressbooksParams == null))
                {
                    this.mAddContactToMultipleAddressbooksParams = new AddContactToMultipleAddressbooksParams();
                }
                return this.mAddContactToMultipleAddressbooksParams;
            }
        }
        
        public virtual AddAndDeleteContactMultipleAddressbooksParams AddAndDeleteContactMultipleAddressbooksParams
        {
            get
            {
                if ((this.mAddAndDeleteContactMultipleAddressbooksParams == null))
                {
                    this.mAddAndDeleteContactMultipleAddressbooksParams = new AddAndDeleteContactMultipleAddressbooksParams();
                }
                return this.mAddAndDeleteContactMultipleAddressbooksParams;
            }
        }
        
        public virtual DeleteContactMultipleAddressbooksParams DeleteContactMultipleAddressbooksParams
        {
            get
            {
                if ((this.mDeleteContactMultipleAddressbooksParams == null))
                {
                    this.mDeleteContactMultipleAddressbooksParams = new DeleteContactMultipleAddressbooksParams();
                }
                return this.mDeleteContactMultipleAddressbooksParams;
            }
        }
        
        public virtual DeleteContactFromMultipleAddressbooksParams DeleteContactFromMultipleAddressbooksParams
        {
            get
            {
                if ((this.mDeleteContactFromMultipleAddressbooksParams == null))
                {
                    this.mDeleteContactFromMultipleAddressbooksParams = new DeleteContactFromMultipleAddressbooksParams();
                }
                return this.mDeleteContactFromMultipleAddressbooksParams;
            }
        }
        
        public virtual SingleQuoteParams SingleQuoteParams
        {
            get
            {
                if ((this.mSingleQuoteParams == null))
                {
                    this.mSingleQuoteParams = new SingleQuoteParams();
                }
                return this.mSingleQuoteParams;
            }
        }
        
        public virtual EmptyDomainParams EmptyDomainParams
        {
            get
            {
                if ((this.mEmptyDomainParams == null))
                {
                    this.mEmptyDomainParams = new EmptyDomainParams();
                }
                return this.mEmptyDomainParams;
            }
        }
        
        public UIAdressbookmanagerWindow UIAdressbookmanagerWindow
        {
            get
            {
                if ((this.mUIAdressbookmanagerWindow == null))
                {
                    this.mUIAdressbookmanagerWindow = new UIAdressbookmanagerWindow();
                }
                return this.mUIAdressbookmanagerWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddOnlyNameParams mAddOnlyNameParams;
        
        private AddValidParams mAddValidParams;
        
        private AddOnlyEmailParams mAddOnlyEmailParams;
        
        private AddNonValidEmailParams mAddNonValidEmailParams;
        
        private AddValidEmailParams mAddValidEmailParams;
        
        private AddContactParams mAddContactParams;
        
        private AddMultipleContactsParams mAddMultipleContactsParams;
        
        private SearchClearParams mSearchClearParams;
        
        private SearchCopyClearParams mSearchCopyClearParams;
        
        private SearchDeleteClearParams mSearchDeleteClearParams;
        
        private CreateNonValidAdressbookParams mCreateNonValidAdressbookParams;
        
        private CreateValidAdressbookParams mCreateValidAdressbookParams;
        
        private AddNonValidNameParams mAddNonValidNameParams;
        
        private DoubleDotsNameParams mDoubleDotsNameParams;
        
        private SingleDotNameParams mSingleDotNameParams;
        
        private AddEmptyDomainParams mAddEmptyDomainParams;
        
        private AddEmptyQuotesParams mAddEmptyQuotesParams;
        
        private DoubleDotsInDomainParams mDoubleDotsInDomainParams;
        
        private SpecialChactersInDomainParams mSpecialChactersInDomainParams;
        
        private DoubleContactParams mDoubleContactParams;
        
        private CreateMultipleContactsParams mCreateMultipleContactsParams;
        
        private EmptyQuotesParams mEmptyQuotesParams;
        
        private SearchCopyEmptyParams mSearchCopyEmptyParams;
        
        private QuotesFirstParams mQuotesFirstParams;
        
        private DotFirstParams mDotFirstParams;
        
        private DotLastParams mDotLastParams;
        
        private AddContactToMultipleAddressbooksParams mAddContactToMultipleAddressbooksParams;
        
        private AddAndDeleteContactMultipleAddressbooksParams mAddAndDeleteContactMultipleAddressbooksParams;
        
        private DeleteContactMultipleAddressbooksParams mDeleteContactMultipleAddressbooksParams;
        
        private DeleteContactFromMultipleAddressbooksParams mDeleteContactFromMultipleAddressbooksParams;
        
        private SingleQuoteParams mSingleQuoteParams;
        
        private EmptyDomainParams mEmptyDomainParams;
        
        private UIAdressbookmanagerWindow mUIAdressbookmanagerWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddOnlyName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class AddOnlyNameParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Bas' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "Bas";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddValid'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class AddValidParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Bas@bas.nl' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "Bas@bas.nl";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddOnlyEmail'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class AddOnlyEmailParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'bladiebladiebla@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "bladiebladiebla@hotmail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddNonValidEmail'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class AddNonValidEmailParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'bas' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "bas";
        
        /// <summary>
        /// Type 'bas@@' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText1 = "bas@@";
        
        /// <summary>
        /// Type 'bas@@blabla' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText2 = "bas@@blabla";
        
        /// <summary>
        /// Type 'bas@bla./nl' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText3 = "bas@bla./nl";
        
        /// <summary>
        /// Type 'bas@bla...nl' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText4 = "bas@bla...nl";
        
        /// <summary>
        /// Type 'b..as@bla...nl' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText5 = "b..as@bla...nl";
        
        /// <summary>
        /// Type 'b..as@bla.nl' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText6 = "b..as@bla.nl";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddValidEmail'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class AddValidEmailParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'bas@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "bas@hotmail.com";
        
        /// <summary>
        /// Type 'bas_meesters@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText1 = "bas_meesters@hotmail.com";
        
        /// <summary>
        /// Type 'bas.meesters@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText2 = "bas.meesters@hotmail.com";
        
        /// <summary>
        /// Type 'bas.meest"iets"ers@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText3 = "bas.meest\"iets\"ers@hotmail.com";
        
        /// <summary>
        /// Type 'bas"nogiets@.nl"iets@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText4 = "bas\"nogiets@.nl\"iets@hotmail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddContact'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class AddContactParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Bas' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "Bas";
        
        /// <summary>
        /// Type '{Tab}' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'bas@bas.nl' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText1 = "bas@bas.nl";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddMultipleContacts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class AddMultipleContactsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Bas' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "Bas";
        
        /// <summary>
        /// Type '{Tab}' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'bas@bas.nl' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText1 = "bas@bas.nl";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchClear'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class SearchClearParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'bas' in 'Adressbook Name: sample' text box
        /// </summary>
        public string UIAdressbookNamesampleEditText = "bas";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchCopyClear'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class SearchCopyClearParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'bas' in 'Adressbook Name: searchbook' text box
        /// </summary>
        public string UIAdressbookNamesearchEditText = "bas";
        
        /// <summary>
        /// Select 'sample2' in 'Contacts:' combo box
        /// </summary>
        public string UIContactsComboBoxSelectedItem = "sample2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchDeleteClear'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class SearchDeleteClearParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'bas' in 'Adressbook Name: sample' text box
        /// </summary>
        public string UIAdressbookNamesampleEditText = "bas";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreateNonValidAdressbook'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class CreateNonValidAdressbookParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'eenveeeltelangeenaaaaaaaaaaaaaaaaam' in 'Adressbook Name:' text box
        /// </summary>
        public string UIAdressbookNameEditText = "eenveeeltelangeenaaaaaaaaaaaaaaaaam";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreateValidAdressbook'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class CreateValidAdressbookParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Test' in 'Adressbook Name:' text box
        /// </summary>
        public string UIAdressbookNameEditText = "Test";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddNonValidName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class AddNonValidNameParams
    {
        
        #region Fields
        /// <summary>
        /// Type '123' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "123";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DoubleDotsName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class DoubleDotsNameParams
    {
        
        #region Fields
        /// <summary>
        /// Type '..' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "..";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SingleDotName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class SingleDotNameParams
    {
        
        #region Fields
        /// <summary>
        /// Type '.' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = ".";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddEmptyDomain'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class AddEmptyDomainParams
    {
        
        #region Fields
        /// <summary>
        /// Type '@empty' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "@empty";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddEmptyQuotes'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class AddEmptyQuotesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'bas""empty@bas.nl' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "bas\"\"empty@bas.nl";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DoubleDotsInDomain'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class DoubleDotsInDomainParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'localpart@domain.com.com2' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "localpart@domain.com.com2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SpecialChactersInDomain'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class SpecialChactersInDomainParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'loc\"..@[]<>=--0;\"@domain.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "loc\\\"..@[]<>=--0;\\\"@domain.com";
        
        /// <summary>
        /// Type 'localpart@dom--ain-.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText1 = "localpart@dom--ain-.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DoubleContact'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class DoubleContactParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'bas' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "bas";
        
        /// <summary>
        /// Type '{Tab}' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'bas@bladiebla.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText1 = "bas@bladiebla.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreateMultipleContacts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class CreateMultipleContactsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'bas' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "bas";
        
        /// <summary>
        /// Type '{Tab}' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'bas@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText1 = "bas@hotmail.com";
        
        /// <summary>
        /// Type 'bas2@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText2 = "bas2@hotmail.com";
        
        /// <summary>
        /// Type 'bas3@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText3 = "bas3@hotmail.com";
        
        /// <summary>
        /// Type 'bas4@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText4 = "bas4@hotmail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EmptyQuotes'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class EmptyQuotesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'bas""@bas.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "bas\"\"@bas.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchCopyEmpty'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class SearchCopyEmptyParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'sample3' in 'Contacts:' combo box
        /// </summary>
        public string UIContactsComboBoxSelectedItem = "sample3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'QuotesFirst'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class QuotesFirstParams
    {
        
        #region Fields
        /// <summary>
        /// Type '"bladiebla"a@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "\"bladiebla\"a@hotmail.com";
        
        /// <summary>
        /// Type '"bladiebla"a@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText1 = "\"bladiebla\"a@hotmail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DotFirst'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class DotFirstParams
    {
        
        #region Fields
        /// <summary>
        /// Type '.iets@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = ".iets@hotmail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DotLast'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class DotLastParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'add.@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "add.@hotmail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddContactToMultipleAddressbooks'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class AddContactToMultipleAddressbooksParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'test' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "test";
        
        /// <summary>
        /// Type '{Tab}' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'test@gmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText1 = "test@gmail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddAndDeleteContactMultipleAddressbooks'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class AddAndDeleteContactMultipleAddressbooksParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'test' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "test";
        
        /// <summary>
        /// Type '{Tab}' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'test@gmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText1 = "test@gmail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DeleteContactMultipleAddressbooks'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class DeleteContactMultipleAddressbooksParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'test' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "test";
        
        /// <summary>
        /// Type '{Tab}' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'test@gmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText1 = "test@gmail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DeleteContactFromMultipleAddressbooks'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class DeleteContactFromMultipleAddressbooksParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'test' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "test";
        
        /// <summary>
        /// Type '{Tab}' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'test@gmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText1 = "test@gmail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SingleQuote'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class SingleQuoteParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'bas"iets@hotmail.com' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "bas\"iets@hotmail.com";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EmptyDomain'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class EmptyDomainParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'bas@' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "bas@";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class UIAdressbookmanagerWindow : WinWindow
    {
        
        public UIAdressbookmanagerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Adressbook manager";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Adressbook manager");
            #endregion
        }
        
        #region Properties
        public UIViewWindow UIViewWindow
        {
            get
            {
                if ((this.mUIViewWindow == null))
                {
                    this.mUIViewWindow = new UIViewWindow(this);
                }
                return this.mUIViewWindow;
            }
        }
        
        public UIAdressbookmanagerClient UIAdressbookmanagerClient
        {
            get
            {
                if ((this.mUIAdressbookmanagerClient == null))
                {
                    this.mUIAdressbookmanagerClient = new UIAdressbookmanagerClient(this);
                }
                return this.mUIAdressbookmanagerClient;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemMenuBar UIItemMenuBar
        {
            get
            {
                if ((this.mUIItemMenuBar == null))
                {
                    this.mUIItemMenuBar = new UIItemMenuBar(this);
                }
                return this.mUIItemMenuBar;
            }
        }
        
        public UIAdressbookmanagerTitleBar UIAdressbookmanagerTitleBar
        {
            get
            {
                if ((this.mUIAdressbookmanagerTitleBar == null))
                {
                    this.mUIAdressbookmanagerTitleBar = new UIAdressbookmanagerTitleBar(this);
                }
                return this.mUIAdressbookmanagerTitleBar;
            }
        }
        
        public UIViewWindow2 UIViewWindow2
        {
            get
            {
                if ((this.mUIViewWindow2 == null))
                {
                    this.mUIViewWindow2 = new UIViewWindow2(this);
                }
                return this.mUIViewWindow2;
            }
        }
        
        public UIDeleteContactWindow UIDeleteContactWindow
        {
            get
            {
                if ((this.mUIDeleteContactWindow == null))
                {
                    this.mUIDeleteContactWindow = new UIDeleteContactWindow(this);
                }
                return this.mUIDeleteContactWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIViewWindow mUIViewWindow;
        
        private UIAdressbookmanagerClient mUIAdressbookmanagerClient;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemMenuBar mUIItemMenuBar;
        
        private UIAdressbookmanagerTitleBar mUIAdressbookmanagerTitleBar;
        
        private UIViewWindow2 mUIViewWindow2;
        
        private UIDeleteContactWindow mUIDeleteContactWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class UIViewWindow : WinWindow
    {
        
        public UIViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "0";
            this.WindowTitles.Add("Adressbook manager");
            #endregion
        }
        
        #region Properties
        public WinButton UIViewButton
        {
            get
            {
                if ((this.mUIViewButton == null))
                {
                    this.mUIViewButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIViewButton.SearchProperties[WinButton.PropertyNames.Name] = "View";
                    this.mUIViewButton.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIViewButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIViewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class UIAdressbookmanagerClient : WinClient
    {
        
        public UIAdressbookmanagerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Adressbook manager";
            this.WindowTitles.Add("Adressbook manager");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddContactButton
        {
            get
            {
                if ((this.mUIAddContactButton == null))
                {
                    this.mUIAddContactButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddContactButton.SearchProperties[WinButton.PropertyNames.Name] = "Add Contact";
                    this.mUIAddContactButton.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIAddContactButton;
            }
        }
        
        public WinButton UIDeleteContactButton
        {
            get
            {
                if ((this.mUIDeleteContactButton == null))
                {
                    this.mUIDeleteContactButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDeleteContactButton.SearchProperties[WinButton.PropertyNames.Name] = "Delete Contact";
                    this.mUIDeleteContactButton.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIDeleteContactButton;
            }
        }
        
        public WinEdit UIAdressbookNamesampleEdit
        {
            get
            {
                if ((this.mUIAdressbookNamesampleEdit == null))
                {
                    this.mUIAdressbookNamesampleEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAdressbookNamesampleEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Adressbook Name: sample";
                    this.mUIAdressbookNamesampleEdit.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIAdressbookNamesampleEdit;
            }
        }
        
        public WinButton UISearchButton
        {
            get
            {
                if ((this.mUISearchButton == null))
                {
                    this.mUISearchButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISearchButton.SearchProperties[WinButton.PropertyNames.Name] = "Search";
                    this.mUISearchButton.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUISearchButton;
            }
        }
        
        public WinButton UIClearButton
        {
            get
            {
                if ((this.mUIClearButton == null))
                {
                    this.mUIClearButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIClearButton.SearchProperties[WinButton.PropertyNames.Name] = "clear";
                    this.mUIClearButton.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIClearButton;
            }
        }
        
        public WinEdit UIAdressbookNamesearchEdit
        {
            get
            {
                if ((this.mUIAdressbookNamesearchEdit == null))
                {
                    this.mUIAdressbookNamesearchEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAdressbookNamesearchEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Adressbook Name: searchbook";
                    this.mUIAdressbookNamesearchEdit.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIAdressbookNamesearchEdit;
            }
        }
        
        public WinComboBox UIContactsComboBox
        {
            get
            {
                if ((this.mUIContactsComboBox == null))
                {
                    this.mUIContactsComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIContactsComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Contacts:";
                    this.mUIContactsComboBox.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIContactsComboBox;
            }
        }
        
        public WinButton UICopyalltoButton
        {
            get
            {
                if ((this.mUICopyalltoButton == null))
                {
                    this.mUICopyalltoButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICopyalltoButton.SearchProperties[WinButton.PropertyNames.Name] = "Copy all to:";
                    this.mUICopyalltoButton.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUICopyalltoButton;
            }
        }
        
        public WinButton UIRemoveallButton
        {
            get
            {
                if ((this.mUIRemoveallButton == null))
                {
                    this.mUIRemoveallButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIRemoveallButton.SearchProperties[WinButton.PropertyNames.Name] = "Remove all";
                    this.mUIRemoveallButton.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIRemoveallButton;
            }
        }
        
        public WinButton UICreateAdressbookButton
        {
            get
            {
                if ((this.mUICreateAdressbookButton == null))
                {
                    this.mUICreateAdressbookButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICreateAdressbookButton.SearchProperties[WinButton.PropertyNames.Name] = "Create Adressbook";
                    this.mUICreateAdressbookButton.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUICreateAdressbookButton;
            }
        }
        
        public WinEdit UIAdressbookNameEdit
        {
            get
            {
                if ((this.mUIAdressbookNameEdit == null))
                {
                    this.mUIAdressbookNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAdressbookNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Adressbook Name:";
                    this.mUIAdressbookNameEdit.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIAdressbookNameEdit;
            }
        }
        
        public WinWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItemWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUIItemWindow.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
                    this.mUIItemWindow.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddContactButton;
        
        private WinButton mUIDeleteContactButton;
        
        private WinEdit mUIAdressbookNamesampleEdit;
        
        private WinButton mUISearchButton;
        
        private WinButton mUIClearButton;
        
        private WinEdit mUIAdressbookNamesearchEdit;
        
        private WinComboBox mUIContactsComboBox;
        
        private WinButton mUICopyalltoButton;
        
        private WinButton mUIRemoveallButton;
        
        private WinButton mUICreateAdressbookButton;
        
        private WinEdit mUIAdressbookNameEdit;
        
        private WinWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Adressbook manager");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Adressbook manager");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class UIItemMenuBar : WinMenuBar
    {
        
        public UIItemMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Adressbook manager");
            #endregion
        }
        
        #region Properties
        public UIAdressbooksMenuItem UIAdressbooksMenuItem
        {
            get
            {
                if ((this.mUIAdressbooksMenuItem == null))
                {
                    this.mUIAdressbooksMenuItem = new UIAdressbooksMenuItem(this);
                }
                return this.mUIAdressbooksMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIAdressbooksMenuItem mUIAdressbooksMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class UIAdressbooksMenuItem : WinMenuItem
    {
        
        public UIAdressbooksMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Adressbooks";
            this.WindowTitles.Add("Adressbook manager");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIAddAdressbookMenuItem
        {
            get
            {
                if ((this.mUIAddAdressbookMenuItem == null))
                {
                    this.mUIAddAdressbookMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIAddAdressbookMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Add Adressbook";
                    this.mUIAddAdressbookMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIAddAdressbookMenuItem.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIAddAdressbookMenuItem;
            }
        }
        
        public WinMenuItem UIViewAdressbooksMenuItem
        {
            get
            {
                if ((this.mUIViewAdressbooksMenuItem == null))
                {
                    this.mUIViewAdressbooksMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIViewAdressbooksMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "View Adressbooks";
                    this.mUIViewAdressbooksMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIViewAdressbooksMenuItem.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIViewAdressbooksMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIAddAdressbookMenuItem;
        
        private WinMenuItem mUIViewAdressbooksMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class UIAdressbookmanagerTitleBar : WinTitleBar
    {
        
        public UIAdressbookmanagerTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Adressbook manager");
            #endregion
        }
        
        #region Properties
        public WinButton UISluitenButton
        {
            get
            {
                if ((this.mUISluitenButton == null))
                {
                    this.mUISluitenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISluitenButton.SearchProperties[WinButton.PropertyNames.Name] = "Sluiten";
                    this.mUISluitenButton.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUISluitenButton;
            }
        }
        
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISluitenButton;
        
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class UIViewWindow2 : WinWindow
    {
        
        public UIViewWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "1";
            this.WindowTitles.Add("Adressbook manager");
            #endregion
        }
        
        #region Properties
        public WinButton UIViewButton
        {
            get
            {
                if ((this.mUIViewButton == null))
                {
                    this.mUIViewButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIViewButton.SearchProperties[WinButton.PropertyNames.Name] = "View";
                    this.mUIViewButton.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIViewButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIViewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class UIDeleteContactWindow : WinWindow
    {
        
        public UIDeleteContactWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Delete Contact 2";
            this.WindowTitles.Add("Adressbook manager");
            #endregion
        }
        
        #region Properties
        public WinButton UIDeleteContactButton
        {
            get
            {
                if ((this.mUIDeleteContactButton == null))
                {
                    this.mUIDeleteContactButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDeleteContactButton.SearchProperties[WinButton.PropertyNames.Name] = "Delete Contact";
                    this.mUIDeleteContactButton.WindowTitles.Add("Adressbook manager");
                    #endregion
                }
                return this.mUIDeleteContactButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDeleteContactButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.445")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
